{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Posts.js","components/Profile/MyPosts/Post/AddPost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","className","style","statusItem","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","error","profile","savePhoto","onSubmit","s","containerInfo","formSummaryError","CreateField","Input","type","target","files","length","Textarea","Object","keys","contacts","map","key","contact","textareaAboutMe","ProfileData","isOwner","onClick","goToEditMode","block","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","aboutMe","Contact","ProfileInfo","Preloader","containerMain","src","photos","large","userPhoto","alt","mainPhoto","pageName","fullName","profileStatus","ProfileStatusWithHooks","initialValues","formData","saveProfile","then","Posts","classes","item","message","likeCounts","addPostReduxForm","Field","component","name","placeholder","validate","required","MyPosts","React","memo","postElements","posts","p","id","blockItem","postsBlock","values","addPost","MyPostsContainer","connect","state","profilePage","newPostText","Profile","compose","withAuthRedirect","withRouter","getProfile","getStatus","authorizedUser","getUserId","isAuth","getAuthorize","getUserProfile","getUserStatus","updateUserStatus","refreshProfile","useCallback","userId","match","params","history","push"],"mappings":"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","file":"static/js/4.352ea91e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1BAsP\",\"img\":\"ProfileInfo_img__2oDrC\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2lunE\",\"contact\":\"ProfileInfo_contact__1MyAW\",\"containerMain\":\"ProfileInfo_containerMain__1mpPC\",\"containerInfo\":\"ProfileInfo_containerInfo__T9nQy\",\"pageName\":\"ProfileInfo_pageName__27Lpw\",\"savePhoto\":\"ProfileInfo_savePhoto__v5FER\",\"profileStatus\":\"ProfileInfo_profileStatus__2fdDB\",\"statusItem\":\"ProfileInfo_statusItem__2Lr7D\",\"aboutMe\":\"ProfileInfo_aboutMe__112fA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1mxb2\",\"posts\":\"MyPosts_posts__3AQG6\",\"blockItem\":\"MyPosts_blockItem__1kSl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Posts_content__fm5gV\",\"item\":\"Posts_item__1FH4Y\"};","    import React, {useEffect, useState} from \"react\";\r\n    import style from './ProfileInfo.module.css';\r\n\r\n    const ProfileStatus = (props) => {\r\n\r\n        let [editMode,setEditMode] = useState(false);\r\n        let [status,setStatus] = useState(props.status);\r\n\r\n        useEffect(() => {\r\n            setStatus(props.status);\r\n        },[props.status]);\r\n\r\n        const activeMode = () => {\r\n            setEditMode(editMode = true);\r\n        }\r\n\r\n        const deactivateMode = () => {\r\n            setEditMode(editMode = false);\r\n            props.updateStatus(status)\r\n        }\r\n\r\n        const onStatusChange = (e) => {\r\n            setStatus(e.currentTarget.value);\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                { !editMode &&\r\n                <div>\r\n                    <b>status</b>: <span className={style.statusItem} onDoubleClick={activeMode}>{status|| '-----' }</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deactivateMode} autoFocus={true} value={status}></input>\r\n                </div>\r\n                }\r\n                </div>\r\n        );\r\n    }\r\n\r\n    export default ProfileStatus;","import React from \"react\";\r\nimport {CreateField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './ProfileInfo.module.css'\r\nimport style from \"../../Common/FormsControls/FormControls.module.css\";\r\n\r\n\r\n    const ProfileDataForm = ({handleSubmit,error,profile,savePhoto,}) => {\r\n        const onmMainPhotoSelected = (e) => {\r\n            if (e.target.files.length){\r\n                savePhoto(e.target.files[0]);\r\n            }\r\n        }\r\n        return (\r\n            <form onSubmit={handleSubmit} className={s.containerInfo}>\r\n                 <div><button>Save</button></div>\r\n                {error && <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n                }\r\n                <div>\r\n                    <b>Full name </b>: {CreateField('Full name',[],'fullName',Input)}\r\n                </div>\r\n                <br/>\r\n                <div className={s.savePhoto}>\r\n                    {<input type={\"file\"} onChange={onmMainPhotoSelected}/>}\r\n                </div>\r\n                <br/>\r\n                <div>\r\n                    <b>Looking for a job </b>:{CreateField('',[],'lookingForAJob',Input,{type:'checkbox'})}\r\n                </div>\r\n\r\n                <div>\r\n                    <b>My professional skills</b>:\r\n                    {CreateField('write your description',[],'lookingForAJobDescription',Textarea)}\r\n                </div>\r\n                <div>\r\n                    <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={s.contact}>\r\n                        <b>{key}: {CreateField(key ,[],'contacts.'+ key ,Input)}</b>\r\n                    </div>\r\n                })}\r\n                </div>\r\n                <div>\r\n                    <b>About me</b>: {CreateField('About me',[],'aboutMe',Textarea,null,null,style.textareaAboutMe)}\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n   const ProfileDataFormReduxForm = reduxForm({\r\n        form:'edit-profile'\r\n    })(ProfileDataForm)\r\n\r\n    export default ProfileDataFormReduxForm;\r\n","\r\n    import React, { useState} from \"react\";\r\n    import {Preloader} from \"../../Common/Prealoder/Preloader\";\r\n    import ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\n    import userPhoto from '../../../assets/images/default.png'\r\n    import style from './ProfileInfo.module.css'\r\n    import ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\n\r\n\r\n\r\n\r\n\r\n    const ProfileInfo = (props) => {\r\n        const [editMode,setEditMode] = useState(false);\r\n\r\n        if (!props.profile) {\r\n            return <Preloader/>\r\n\r\n        }\r\n\r\n        const onSubmit = (formData) => {\r\n            props.saveProfile(formData).then(()=>{\r\n                setEditMode(false);\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                    <figure>\r\n                        <div className={style.containerMain}>\r\n                            <img src={props.profile.photos.large || userPhoto } alt = 'userPhoto' className={style.mainPhoto}/>\r\n                            <div className={style.pageName}>\r\n                                 <h1>{props.profile.fullName}</h1>\r\n                            </div>\r\n                            <div className={style.profileStatus}>\r\n                                <ProfileStatusWithHooks status = {props.status} updateStatus={props.updateStatus}/>\r\n                            </div>\r\n                        </div>\r\n                        {editMode\r\n                            ? <ProfileDataFormReduxForm initialValues={props.profile}\r\n                                                        profile = {props.profile}\r\n                                                        onSubmit = {onSubmit}\r\n                                                        savePhoto = {props.savePhoto}\r\n                            />\r\n                            : <ProfileData profile = {props.profile}\r\n                                           isOwner = {props.isOwner}\r\n                                           goToEditMode = {() => {setEditMode(true)}}\r\n                            />}\r\n                    </figure>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const ProfileData = (props) => {\r\n        return (\r\n            <div className={style.containerInfo}>\r\n                {props.isOwner && <div><button onClick={props.goToEditMode}>edit</button></div>}\r\n                <div className={style.block}>\r\n                    <b>Looking for a job </b>: {props.profile.lookingForAJob ? 'yes': 'no'}\r\n                </div>\r\n                { props.profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills</b>: {props.profile.lookingForAJobDescription}\r\n                </div>\r\n                }\r\n                <div>\r\n                    <b>Contacts</b>: {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact contactTitle={key}\r\n                                    contactValue={props.profile.contacts[key]}\r\n                                    key = {key}\r\n                    />\r\n                })}\r\n                </div>\r\n                <div className={style.aboutMe}>\r\n                    <b>About me</b>: {props.profile.aboutMe}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    export const Contact = ({contactTitle, contactValue}) => {\r\n        return <div className={style.contact}>\r\n            <b>{contactTitle}</b>: {contactValue}\r\n        </div>\r\n    }\r\n\r\n    export default ProfileInfo  ;","\r\n    import React from \"react\";\r\n    import classes from './Posts.module.css';\r\n\r\n    const Posts = (props) => {\r\n\r\n        return (\r\n\r\n            <div className={classes.item}>\r\n                <div>\r\n                    {props.message}\r\n                    <span> like </span> {props.likeCounts}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n\r\n    }\r\n\r\n    export default Posts;","    import React from \"react\";\r\n    import {Field, reduxForm} from \"redux-form\";\r\n    import {required} from \"../../../../utility/validation/validators\";\r\n    import {Textarea} from \"../../../Common/FormsControls/FormsControls\";\r\n\r\n    const AddPost = (props) => {\r\n        return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field component={Textarea}  name={'addPost'} placeholder={'Add post'}\r\n                           validate={[required]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    const addPostReduxForm = reduxForm({form: 'profileAddPost'})(AddPost);\r\n\r\n    export default addPostReduxForm;","import React from \"react\";\r\nimport style from './MyPosts.module.css';\r\nimport Posts from \"./Post/Posts\";\r\nimport AddPostReduxForm from \"./Post/AddPost\";\r\n\r\n\r\n     const MyPosts = React.memo(props => {\r\n            let postElements = props.posts\r\n                .map( p => <div className={style.posts} key={p.id}>\r\n                    <Posts message={p.message} likeCounts={p.likeCounts}/>\r\n                </div>\r\n                );\r\n\r\n            let onAddPost = (values) => {\r\n                props.addPost(values.addPost);\r\n            };\r\n\r\n            return (\r\n                <div className={style.blockItem}>\r\n                <div className={style.postsBlock}>\r\n                    <h3>My posts</h3>\r\n                    <AddPostReduxForm onSubmit={onAddPost}/>\r\n                        {postElements}\r\n\r\n                </div>\r\n                </div>\r\n            );\r\n        })\r\n\r\n    export default MyPosts;","\r\n\r\n    import {addPost} from \"../../../Redux/ProfileReducer\";\r\n    import MyPosts from \"./MyPosts\";\r\n    import {connect} from \"react-redux\";\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            posts: state.profilePage.posts,\r\n            newPostText: state.profilePage.newPostText\r\n\r\n        }\r\n    }\r\n\r\n    let MyPostsContainer = connect(mapStateToProps, {\r\n            addPost\r\n        })(MyPosts);\r\n\r\n    export default MyPostsContainer;","    import React from \"react\";\r\n    import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n    import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n\r\n    const Profile = (props) => {\r\n\r\n        return (\r\n            <div>\r\n                <ProfileInfo profile = {props.profile}\r\n                             status={props.status}\r\n                             updateStatus = {props.updateStatus}\r\n                             isOwner = {props.isOwner}\r\n                             savePhoto = {props.savePhoto}\r\n                             saveProfile = {props.saveProfile}\r\n\r\n                />\r\n                {props.profile && <MyPostsContainer/>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    export default Profile  ;","    import React, {useCallback, useEffect} from \"react\";\r\n    import Profile from \"./Profile\";\r\n    import {connect} from \"react-redux\";\r\n    import {getUserProfile, getUserStatus, savePhoto, saveProfile, updateUserStatus} from \"../../Redux/ProfileReducer\";\r\n    import {withRouter} from \"react-router-dom\";\r\n    import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n    import {compose} from \"redux\";\r\n    import {getProfile, getStatus} from \"../../Redux/Selectors/profile-selector\";\r\n    import {getAuthorize, getUserId} from \"../../Redux/Selectors/auth-selector\";\r\n\r\n    const ProfileContainer = (props) => {\r\n\r\n\r\n        const refreshProfile = useCallback(() => {\r\n            let userId = props.match.params.userId;\r\n            if (!userId){\r\n                userId =  props.authorizedUser;\r\n                if (!userId){\r\n                    props.history.push('/login');\r\n                }\r\n            }\r\n            props.getUserProfile(userId);\r\n            props.getUserStatus(userId);\r\n        },[props]);\r\n\r\n        useEffect(() => {\r\n            refreshProfile();\r\n        },[props.status,refreshProfile]);\r\n\r\n        return (\r\n            <Profile {...props}\r\n                     profile={props.profile}\r\n                     status = {props.status}\r\n                     updateStatus = {props.updateUserStatus}\r\n                     isOwner = {!props.match.params.userId}\r\n                     savePhoto = {props.savePhoto}\r\n\r\n            />\r\n        );\r\n    }\r\n    let mapStateToProps = (state) => ({\r\n        profile: getProfile(state),\r\n        status: getStatus(state),\r\n        authorizedUser :getUserId(state),\r\n        isAuth: getAuthorize(state)\r\n    })\r\n    \r\n    export default compose(\r\n        withAuthRedirect,\r\n        withRouter,\r\n        connect(mapStateToProps,{\r\n            getUserProfile,\r\n            getUserStatus,\r\n            updateUserStatus,\r\n            savePhoto,\r\n            saveProfile\r\n        }\r\n        ))(ProfileContainer);\r\n\r\n\r\n\r\n"],"sourceRoot":""}